{"ast":null,"code":"var _jsxFileName = \"/Users/phuonglai/chat-app/client/src/components/SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { Button } from '@mui/material';\nimport { emailValidator } from '../utils/validator';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignIn() {\n  _s();\n\n  let [username, setUserName] = useState();\n  let [name, setName] = useState();\n  let [email, setEmail] = useState();\n  let [password, setPassword] = useState();\n  let [confirmPassword, setConfirm] = useState();\n  let [passwordError, setPassError] = useState(false);\n  let [emaiError, setEmailError] = useState(false);\n\n  const handleSubmit = event => {\n    let err = false;\n\n    if (confirmPassword != password) {\n      setPassError(true);\n      err = true;\n    }\n\n    if (email && !email.match(emailValidator)) {\n      setEmailError(true);\n      err = true;\n    }\n\n    if (err) return;\n    const navigate = useNavigate;\n    const newUser = {\n      username: username,\n      name: name,\n      email: email,\n      password: password\n    };\n    console.log(newUser);\n    fetch('/auth', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newUser)\n    }).then(response => {\n      if (response.status >= 200 && response.status < 300) {\n        response.json().then(data => navigate('/user', {\n          user: data\n        }));\n      }\n    }).catch(err => console.log(err));\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Name\",\n      variant: \"standard\",\n      onChange: event => {\n        setName(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Username\",\n      variant: \"standard\",\n      onChange: event => {\n        setUserName(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), emaiError ? /*#__PURE__*/_jsxDEV(TextField, {\n      error: true,\n      label: \"Email\",\n      variant: \"standard\",\n      helperText: \"Incorrect email format.\",\n      onChange: event => {\n        setEmail(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Email\",\n      variant: \"standard\",\n      onChange: event => {\n        setEmail(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Password\",\n      variant: \"standard\",\n      onChange: event => {\n        setPassword(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this), !passwordError ? /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Confirm Password\",\n      variant: \"standard\",\n      onChange: event => {\n        setConfirm(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n      error: true,\n      label: \"Confirm Password\",\n      variant: \"standard\",\n      helperText: \"Passwords does not match\",\n      onChange: event => {\n        setConfirm(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleSubmit,\n      children: \"Primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SignIn, \"Uf+v7BNbJ2zgmeGFjB1IdSnYTmA=\");\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","TextField","Button","emailValidator","useNavigate","SignIn","username","setUserName","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirm","passwordError","setPassError","emaiError","setEmailError","handleSubmit","event","err","match","navigate","newUser","console","log","fetch","method","headers","body","JSON","stringify","then","response","status","json","data","user","catch","target","value"],"sources":["/Users/phuonglai/chat-app/client/src/components/SignIn.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { Button } from '@mui/material';\nimport { emailValidator } from '../utils/validator';\nimport { useNavigate } from 'react-router';\n\nfunction SignIn() {\n\tlet [username, setUserName] = useState();\n\tlet [name, setName] = useState();\n\tlet [email, setEmail] = useState();\n\tlet [password, setPassword] = useState();\n\tlet [confirmPassword, setConfirm] = useState();\n\tlet [passwordError, setPassError] = useState(false);\n\tlet [emaiError, setEmailError] = useState(false);\n\n\tconst handleSubmit = (event) => {\n\t\tlet err = false;\n\t\tif (confirmPassword != password) {\n\t\t\tsetPassError(true);\n\t\t\terr = true;\n\t\t}\n\t\tif (email && !email.match(emailValidator)) {\n\t\t\tsetEmailError(true);\n\t\t\terr = true;\n\t\t}\n\t\tif (err) return;\n\t\tconst navigate = useNavigate;\n\t\tconst newUser = {\n\t\t\tusername: username,\n\t\t\tname: name,\n\t\t\temail: email,\n\t\t\tpassword: password,\n\t\t};\n\t\tconsole.log(newUser);\n\t\tfetch('/auth', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(newUser),\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tif (response.status >= 200 && response.status < 300) {\n\t\t\t\t\tresponse.json().then((data) => navigate('/user', { user: data }));\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t\treturn;\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<TextField\n\t\t\t\tlabel='Name'\n\t\t\t\tvariant='standard'\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tsetName(event.target.value);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<br />\n\n\t\t\t<TextField\n\t\t\t\tlabel='Username'\n\t\t\t\tvariant='standard'\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tsetUserName(event.target.value);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<br />\n\t\t\t{emaiError ? (\n\t\t\t\t<TextField\n\t\t\t\t\terror\n\t\t\t\t\tlabel='Email'\n\t\t\t\t\tvariant='standard'\n\t\t\t\t\thelperText='Incorrect email format.'\n\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\tsetEmail(event.target.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<TextField\n\t\t\t\t\tlabel='Email'\n\t\t\t\t\tvariant='standard'\n\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\tsetEmail(event.target.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<br />\n\t\t\t<TextField\n\t\t\t\tlabel='Password'\n\t\t\t\tvariant='standard'\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tsetPassword(event.target.value);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<br />\n\t\t\t{!passwordError ? (\n\t\t\t\t<TextField\n\t\t\t\t\tlabel='Confirm Password'\n\t\t\t\t\tvariant='standard'\n\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\tsetConfirm(event.target.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<TextField\n\t\t\t\t\terror\n\t\t\t\t\tlabel='Confirm Password'\n\t\t\t\t\tvariant='standard'\n\t\t\t\t\thelperText='Passwords does not match'\n\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\tsetConfirm(event.target.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t<br />\n\t\t\t<Button variant='outlined' onClick={handleSubmit}>\n\t\t\t\tPrimary\n\t\t\t</Button>\n\t\t</div>\n\t);\n}\n\nexport default SignIn;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}